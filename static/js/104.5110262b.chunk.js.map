{"version":3,"file":"static/js/104.5110262b.chunk.js","mappings":"8SACMA,EAAU,mCAEHC,EAAc,mCAAG,WAAMC,GAAN,+EACV,kDACZC,EAAU,CACdD,OAAQA,EACRE,OAAQ,CACNC,QAASL,IALe,SASLM,EAAAA,EAAAA,IARL,kDAQ0BH,GAThB,cAStBI,EATsB,gBAUfA,EAASC,KAVM,mFAAH,sDAadC,EAAe,mCAAG,WAAOC,EAAOR,GAAd,2HAEvBC,EAAU,CACdD,OAAQA,EACRE,OAAQ,CACNC,QAASL,EACTW,MAAOD,IANkB,SASNJ,EAAAA,EAAAA,IATM,4CASgBH,GAThB,cASvBI,EATuB,gBAUhBA,EAASC,KAVO,mFAAH,wDAafI,EAAO,mCAAG,WAAOC,EAAIC,GAAX,kFACfC,EADe,6CACsCF,GACrDV,EAAU,CACdD,OAAQY,EAAWZ,OACnBE,OAAQ,CACNC,QAASL,IALQ,SAQEM,EAAAA,EAAAA,IAAUS,EAAcZ,GAR1B,cAQfI,EARe,gBASRA,EAASC,KATD,mFAAH,wDAYPQ,EAAO,mCAAG,WAAOH,EAAIC,GAAX,kFACfG,EADe,6CACqCJ,EADrC,aAEfV,EAAU,CACdD,OAAQY,EAAWZ,OACnBE,OAAQ,CACNC,QAASL,IALQ,SAQEM,EAAAA,EAAAA,IAAUW,EAAad,GARzB,cAQfI,EARe,gBASRA,EAASC,KATD,mFAAH,wDAYPU,EAAU,mCAAG,WAAOL,EAAIC,GAAX,kFAClBK,EADkB,6CACqCN,EADrC,YAElBV,EAAU,CACdD,OAAQY,EAAWZ,OACnBE,OAAQ,CACNC,QAASL,IALW,SAQDM,EAAAA,EAAAA,IAAUa,EAAgBhB,GARzB,cAQlBI,EARkB,gBASXA,EAASC,KATE,mFAAH,uD,2JCnDVY,EAASC,EAAAA,EAAAA,GAAH,wJASNC,EAAaD,EAAAA,EAAAA,EAAH,qE,SCsCvB,EA5CqB,WACnB,OAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAqBR,OAnBAE,EAAAA,EAAAA,YAAU,WACR,IAAMd,EAAa,IAAIe,gBAEjBC,EAAU,mCAAG,8GAEQZ,EAAAA,EAAAA,IAAWQ,EAASZ,GAF5B,OAETP,EAFS,OAGfkB,EAAWlB,EAASwB,SAHL,gDAKfC,QAAQC,IAAR,MALe,yDAAH,qDAWhB,OAFAH,IAEO,WACLhB,EAAWoB,OACZ,CACF,GAAE,CAACR,KAGF,wBACsB,IAAnBF,EAAQW,OACPX,EAAQY,KAAI,gBAAGvB,EAAH,EAAGA,GAAIwB,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAASC,EAAxB,EAAwBA,WAAxB,OACV,UAACnB,EAAD,YACE,wBAAKiB,KACL,uBAAIC,KACJ,SAAChB,EAAD,UAAaiB,MAHF1B,EADH,KAUZ,SAACO,EAAD,WACE,uDAKT,C","sources":["api.js","components/MovieReviews/MovieReviews.styled.js","components/MovieReviews/MovieReviews.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = '2f9097e7af7134119fcdce7363f2f155';\n\nexport const apiTrendMovies = async signal => {\n  const TREND_URL = 'https://api.themoviedb.org/3/trending/movie/day';\n  const options = {\n    signal: signal,\n    params: {\n      api_key: API_KEY,\n    },\n  };\n\n  const responce = await axios.get(TREND_URL, options);\n  return await responce.data;\n};\n\nexport const apiByNameMovies = async (movie, signal) => {\n  const SEARCH_URL = `https://api.themoviedb.org/3/search/movie`;\n  const options = {\n    signal: signal,\n    params: {\n      api_key: API_KEY,\n      query: movie,\n    },\n  };\n  const responce = await axios.get(SEARCH_URL, options);\n  return await responce.data;\n};\n\nexport const apiById = async (id, controller) => {\n  const SEARCH_BY_ID = `https://api.themoviedb.org/3/movie/${id}`;\n  const options = {\n    signal: controller.signal,\n    params: {\n      api_key: API_KEY,\n    },\n  };\n  const responce = await axios.get(SEARCH_BY_ID, options);\n  return await responce.data;\n};\n\nexport const apiCast = async (id, controller) => {\n  const SEARCH_CAST = `https://api.themoviedb.org/3/movie/${id}/credits?`;\n  const options = {\n    signal: controller.signal,\n    params: {\n      api_key: API_KEY,\n    },\n  };\n  const responce = await axios.get(SEARCH_CAST, options);\n  return await responce.data;\n};\n\nexport const apiReviews = async (id, controller) => {\n  const SEARCH_REVIEWS = `https://api.themoviedb.org/3/movie/${id}/reviews`;\n  const options = {\n    signal: controller.signal,\n    params: {\n      api_key: API_KEY,\n    },\n  };\n  const responce = await axios.get(SEARCH_REVIEWS, options);\n  return await responce.data;\n};\n","import styled from '@emotion/styled';\n\nexport const Review = styled.li`\n  border: 1px solid black;\n  border-radius: 5px;\n  padding: 10px 30px;\n  :not(:last-child) {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const DateUpdate = styled.p`\n  text-align: right;\n  margin-right: 50px;\n`;\n","import { apiReviews } from 'api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { DateUpdate, Review } from './MovieReviews.styled';\n\nconst MovieReviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const controller = new AbortController();\n\n    const getReviews = async () => {\n      try {\n        const responce = await apiReviews(movieId, controller);\n        setReviews(responce.results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getReviews();\n\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n\n  return (\n    <ul>\n      {reviews.length !== 0 ? (\n        reviews.map(({ id, author, content, updated_at }) => (\n          <Review key={id}>\n            <h3>{author}</h3>\n            <p>{content}</p>\n            <DateUpdate>{updated_at}</DateUpdate>\n          </Review>\n        ))\n      ) \n      : \n      (\n        <Review>\n          <p>No reviews to this movie</p>\n        </Review>\n      )}\n    </ul>\n  );\n};\n\nexport default MovieReviews;"],"names":["API_KEY","apiTrendMovies","signal","options","params","api_key","axios","responce","data","apiByNameMovies","movie","query","apiById","id","controller","SEARCH_BY_ID","apiCast","SEARCH_CAST","apiReviews","SEARCH_REVIEWS","Review","styled","DateUpdate","useState","reviews","setReviews","movieId","useParams","useEffect","AbortController","getReviews","results","console","log","abort","length","map","author","content","updated_at"],"sourceRoot":""}