{"version":3,"file":"static/js/730.3435dc3c.chunk.js","mappings":"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","sources":["api.js","components/Home/Home.style.jsx","components/Movies/Movies.styled.jsx","components/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = '2f9097e7af7134119fcdce7363f2f155';\n\nexport const apiTrendMovies = async signal => {\n  const TREND_URL = 'https://api.themoviedb.org/3/trending/movie/day';\n  const options = {\n    signal: signal,\n    params: {\n      api_key: API_KEY,\n    },\n  };\n\n  const responce = await axios.get(TREND_URL, options);\n  return await responce.data;\n};\n\nexport const apiByNameMovies = async (movie, signal) => {\n  const SEARCH_URL = `https://api.themoviedb.org/3/search/movie`;\n  const options = {\n    signal: signal,\n    params: {\n      api_key: API_KEY,\n      query: movie,\n    },\n  };\n  const responce = await axios.get(SEARCH_URL, options);\n  return await responce.data;\n};\n\nexport const apiById = async (id, controller) => {\n  const SEARCH_BY_ID = `https://api.themoviedb.org/3/movie/${id}`;\n  const options = {\n    signal: controller.signal,\n    params: {\n      api_key: API_KEY,\n    },\n  };\n  const responce = await axios.get(SEARCH_BY_ID, options);\n  return await responce.data;\n};\n\nexport const apiCast = async (id, controller) => {\n  const SEARCH_CAST = `https://api.themoviedb.org/3/movie/${id}/credits?`;\n  const options = {\n    signal: controller.signal,\n    params: {\n      api_key: API_KEY,\n    },\n  };\n  const responce = await axios.get(SEARCH_CAST, options);\n  return await responce.data;\n};\n\nexport const apiReviews = async (id, controller) => {\n  const SEARCH_REVIEWS = `https://api.themoviedb.org/3/movie/${id}/reviews`;\n  const options = {\n    signal: controller.signal,\n    params: {\n      api_key: API_KEY,\n    },\n  };\n  const responce = await axios.get(SEARCH_REVIEWS, options);\n  return await responce.data;\n};\n","import styled from '@emotion/styled';\n\nexport const TrendTitle = styled.h1`\n  text-align: center;\n  font-size: 32px;\n  line-height: 1.36;\n  color: red;\n`;\n\nexport const FilmTitle = styled.h2`\n  text-align: center;\n  font-size: 25px;\n  line-height: 1.11;\n  text-transform: uppercase;\n  color: black;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover,\n  :focus {\n    color: #2196f3;\n  }\n`;\n","import styled from '@emotion/styled';\nimport { GrFormSearch } from 'react-icons/gr';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  margin-top: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  border: 1px solid black;\n  overflow: hidden;\n`;\n\nexport const SearchFormButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover,\n  :focus {\n    opacity: 1;\n  }\n`;\n\nexport const Icon = styled(GrFormSearch)`\n  width: 34px;\n  height: 34px;\n`;\n\nexport const SearchFormButtonLabel = styled.span`\n  position: absolute;\n  color: black;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 16px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport {\n  SearchForm,\n  SearchFormButton,\n  SearchFormButtonLabel,\n  SearchFormInput,\n  Icon,\n} from './Movies.styled';\nimport { apiByNameMovies } from 'api';\nimport { FilmTitle } from 'components/Home/Home.style';\n\nconst Movies = () => {\n  const [input, setInput] = useState('');\n  const [searchFilms, setSearchFilms] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const inputName = searchParams.get('name') ?? '';\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ name: input });\n  };\n\n  useEffect(() => {\n    if (inputName === '') {\n      return;\n    }\n\n    const controller = new AbortController();\n\n    const getSearchApi = async () => {\n      try {\n        const searchName = await apiByNameMovies(inputName, controller.signal);\n        setSearchFilms(searchName.results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getSearchApi();\n\n    return () => controller.abort();\n  }, [inputName]);\n\n  return (\n    <>\n      <SearchForm onSubmit={handleSubmit}>\n        <SearchFormButton>\n          <Icon />\n          <SearchFormButtonLabel>Search</SearchFormButtonLabel>\n        </SearchFormButton>\n\n        <SearchFormInput\n          type=\"text\"\n          name=\"inputValue\"\n          autocomplete=\"off\"\n          autoFocus\n          placeholder=\"Search films\"\n          value={input}\n          onChange={e => setInput(e.target.value)}\n        />\n      </SearchForm>\n\n      {searchFilms && (\n        <ul>\n          {searchFilms.map(({ id, title }) => (\n            <li key={id}>\n              <Link\n                to={`/movies/${id}`}\n                state={{ from: `${location.pathname}${location.search}` }}\n              >\n                <FilmTitle>{title}</FilmTitle>\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["API_KEY","apiTrendMovies","signal","options","params","api_key","axios","responce","data","apiByNameMovies","movie","query","apiById","id","controller","SEARCH_BY_ID","apiCast","SEARCH_CAST","apiReviews","SEARCH_REVIEWS","TrendTitle","styled","FilmTitle","SearchForm","SearchFormButton","Icon","GrFormSearch","SearchFormButtonLabel","SearchFormInput","useState","input","setInput","searchFilms","setSearchFilms","useSearchParams","searchParams","setSearchParams","location","useLocation","inputName","get","useEffect","AbortController","getSearchApi","searchName","results","console","log","abort","onSubmit","e","preventDefault","name","type","autocomplete","autoFocus","placeholder","value","onChange","target","map","title","to","state","from","pathname","search"],"sourceRoot":""}